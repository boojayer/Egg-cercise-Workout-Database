{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/CS-97-Project/filler-name/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { API, createHeader } from '../constants';\nimport './AuthForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup(props) {\n  _s();\n\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    error: ''\n  });\n\n  const handleChange = event => {\n    event.preventDefault();\n    const {\n      id,\n      value\n    } = event.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await API.post('/users', state, createHeader(null));\n      window.localStorage.setItem('jwt', response.data.token);\n      props.authenticate(true);\n      props.history.push('/home');\n    } catch {\n      let prevState = state;\n      setState({\n        username: prevState.username,\n        email: prevState.email,\n        password: prevState.password,\n        error: 'invalid credentials'\n      });\n    }\n  };\n\n  const inputStyle = {\n    display: 'block',\n    padding: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"authentication-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: inputStyle,\n      htmlFor: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: inputStyle,\n      type: \"text\",\n      id: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: inputStyle,\n      htmlFor: \"email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: inputStyle,\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: inputStyle,\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: inputStyle,\n      type: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create Account\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"UtwJvR88g91/nVX5DYlZUUN9IH0=\");\n\n_c = Signup;\nexport default _c2 = withRouter(Signup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/stephen/Desktop/CS-97-Project/filler-name/src/components/Signup.js"],"names":["useState","withRouter","API","createHeader","Signup","props","state","setState","username","email","password","error","handleChange","event","preventDefault","id","value","target","prevState","handleSubmit","response","post","window","localStorage","setItem","data","token","authenticate","history","push","inputStyle","display","padding","color"],"mappings":";;;AAAA,SACEA,QADF,QAEO,OAFP;AAGA,SACEC,UADF,QAEO,kBAFP;AAGA,SACEC,GADF,EAEEC,YAFF,QAGO,cAHP;AAIA,OAAO,gBAAP;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,KAAK,EAAE;AAJ0B,GAAD,CAAlC;;AAOA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBH,KAAK,CAACI,MAA5B;AACAV,IAAAA,QAAQ,CAACW,SAAS,KAAK,EACrB,GAAGA,SADkB;AAErB,OAACH,EAAD,GAAMC;AAFe,KAAL,CAAV,CAAR;AAID,GAPD;;AASA,QAAMG,YAAY,GAAG,MAAMN,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,CAAS,QAAT,EAAmBf,KAAnB,EAA0BH,YAAY,CAAC,IAAD,CAAtC,CAAvB;AACAmB,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,EAAmCJ,QAAQ,CAACK,IAAT,CAAcC,KAAjD;AACArB,MAAAA,KAAK,CAACsB,YAAN,CAAmB,IAAnB;AACAtB,MAAAA,KAAK,CAACuB,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACD,KALD,CAKE,MAAM;AACN,UAAIX,SAAS,GAAGZ,KAAhB;AACAC,MAAAA,QAAQ,CAAC;AACPC,QAAAA,QAAQ,EAAEU,SAAS,CAACV,QADb;AAEPC,QAAAA,KAAK,EAAES,SAAS,CAACT,KAFV;AAGPC,QAAAA,QAAQ,EAAEQ,SAAS,CAACR,QAHb;AAIPC,QAAAA,KAAK,EAAE;AAJA,OAAD,CAAR;AAMD;AACF,GAhBD;;AAkBA,QAAMmB,UAAU,GAAG;AACjBC,IAAAA,OAAO,EAAE,OADQ;AAEjBC,IAAAA,OAAO,EAAE;AAFQ,GAAnB;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEF,UAAd;AAA0B,MAAA,OAAO,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,KAAK,EAAEA,UAAd;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,EAAE,EAAC,UAAzC;AAAoD,MAAA,WAAW,EAAC,UAAhE;AAA2E,MAAA,QAAQ,EAAElB;AAArF;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,KAAK,EAAEkB,UAAd;AAA0B,MAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,KAAK,EAAEA,UAAd;AAA0B,MAAA,IAAI,EAAC,OAA/B;AAAuC,MAAA,EAAE,EAAC,OAA1C;AAAkD,MAAA,WAAW,EAAC,OAA9D;AAAsE,MAAA,QAAQ,EAAElB;AAAhF;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,KAAK,EAAEkB,UAAd;AAA0B,MAAA,OAAO,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAO,MAAA,KAAK,EAAEA,UAAd;AAA0B,MAAA,IAAI,EAAC,UAA/B;AAA0C,MAAA,EAAE,EAAC,UAA7C;AAAwD,MAAA,WAAW,EAAC,UAApE;AAA+E,MAAA,QAAQ,EAAElB;AAAzF;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAG,MAAA,KAAK,EAAE;AAACqB,QAAAA,KAAK,EAAE;AAAR,OAAV;AAAA,gBAA2B3B,KAAK,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,gBAA3B;AAA4C,MAAA,OAAO,EAAEQ;AAArD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApDQf,M;;KAAAA,M;AAsDT,qBAAeH,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import {\n  useState\n} from 'react';\nimport {\n  withRouter\n} from 'react-router-dom';\nimport {\n  API,\n  createHeader\n} from '../constants';\nimport './AuthForm.css';\n\nfunction Signup(props) {\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    error: ''\n  });\n\n  const handleChange = event => {\n    event.preventDefault();\n    const { id, value } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      [id]: value\n    }));\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await API.post('/users', state, createHeader(null));\n      window.localStorage.setItem('jwt', response.data.token);\n      props.authenticate(true);\n      props.history.push('/home');\n    } catch {\n      let prevState = state;\n      setState({\n        username: prevState.username,\n        email: prevState.email,\n        password: prevState.password,\n        error: 'invalid credentials'\n      });\n    }\n  }\n\n  const inputStyle = {\n    display: 'block',\n    padding: '10px'\n  };\n\n  return (\n    <form className=\"authentication-form\">\n      <label style={inputStyle} htmlFor=\"username\">Username</label>\n      <input style={inputStyle} type=\"text\" id=\"username\" placeholder=\"Username\" onChange={handleChange} />\n      <label style={inputStyle} htmlFor=\"email\">Email</label>\n      <input style={inputStyle} type=\"email\" id=\"email\" placeholder=\"Email\" onChange={handleChange} />\n      <label style={inputStyle} htmlFor=\"password\">Password</label>\n      <input style={inputStyle} type=\"password\" id=\"password\" placeholder=\"Password\" onChange={handleChange} />\n      <p style={{color: 'red'}}>{state.error}</p>\n      <input type=\"submit\" value=\"Create Account\" onClick={handleSubmit} />\n    </form>\n  );\n}\n\nexport default withRouter(Signup);"]},"metadata":{},"sourceType":"module"}