{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/CS-97-Project/filler-name/src/components/StarRating.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst starStyle = {\n  fontSize: '30px'\n};\n\nfunction StarRating(props) {\n  _s();\n\n  const [count, setCount] = useState(props.rating);\n  const rating = useRef('rating');\n\n  const setRating = () => {\n    const stars = rating.current.getElementsByClassName('star');\n    Array.from(stars).forEach(star => {\n      star.style.color = Math.ceil(count) >= star.dataset.value ? 'yellow' : 'gray';\n    });\n  };\n\n  const handleClick = event => {\n    let c = event.target.dataset.value;\n    setCount(c);\n    if (props.onClick) props.onClick(c);\n  };\n\n  const hover = event => {\n    event.target.parentElement.style.cursor = 'pointer';\n    const stars = rating.current.getElementsByClassName('star');\n    let value = event.target.dataset.value;\n    Array.from(stars).forEach(star => {\n      star.style.color = value >= star.dataset.value ? 'yellow' : 'gray';\n    });\n  };\n\n  useEffect(setRating);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rating\",\n    ref: rating,\n    \"data-rating\": count,\n    onMouseOut: setRating,\n    children: [...Array(5).keys()].map(n => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: starStyle,\n      className: \"star\",\n      \"data-value\": n + 1,\n      onClick: handleClick,\n      onMouseOver: hover,\n      children: \"\\u2605\"\n    }, n + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StarRating, \"nG/Lm2V3/NMT4Xc4pdpfyLRiC6Q=\");\n\n_c = StarRating;\nexport default StarRating;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarRating\");","map":{"version":3,"sources":["/home/stephen/Desktop/CS-97-Project/filler-name/src/components/StarRating.js"],"names":["React","useState","useEffect","useRef","starStyle","fontSize","StarRating","props","count","setCount","rating","setRating","stars","current","getElementsByClassName","Array","from","forEach","star","style","color","Math","ceil","dataset","value","handleClick","event","c","target","onClick","hover","parentElement","cursor","keys","map","n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AADM,CAAlB;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACG,MAAP,CAAlC;AAEA,QAAMA,MAAM,GAAGP,MAAM,CAAC,QAAD,CAArB;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeC,sBAAf,CAAsC,MAAtC,CAAd;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAWJ,KAAX,EAAkBK,OAAlB,CAA0BC,IAAI,IAAI;AAChCA,MAAAA,IAAI,CAACC,KAAL,CAAWC,KAAX,GAAmBC,IAAI,CAACC,IAAL,CAAUd,KAAV,KAAoBU,IAAI,CAACK,OAAL,CAAaC,KAAjC,GAAyC,QAAzC,GAAoD,MAAvE;AACD,KAFD;AAGD,GALD;;AAOA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaL,OAAb,CAAqBC,KAA7B;AACAf,IAAAA,QAAQ,CAACkB,CAAD,CAAR;AACA,QAAGpB,KAAK,CAACsB,OAAT,EACEtB,KAAK,CAACsB,OAAN,CAAcF,CAAd;AACH,GALD;;AAOA,QAAMG,KAAK,GAAGJ,KAAK,IAAI;AACrBA,IAAAA,KAAK,CAACE,MAAN,CAAaG,aAAb,CAA2BZ,KAA3B,CAAiCa,MAAjC,GAA0C,SAA1C;AACA,UAAMpB,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeC,sBAAf,CAAsC,MAAtC,CAAd;AACA,QAAIU,KAAK,GAAGE,KAAK,CAACE,MAAN,CAAaL,OAAb,CAAqBC,KAAjC;AACAT,IAAAA,KAAK,CAACC,IAAN,CAAWJ,KAAX,EAAkBK,OAAlB,CAA0BC,IAAI,IAAI;AAChCA,MAAAA,IAAI,CAACC,KAAL,CAAWC,KAAX,GAAmBI,KAAK,IAAIN,IAAI,CAACK,OAAL,CAAaC,KAAtB,GAA8B,QAA9B,GAAyC,MAA5D;AACD,KAFD;AAGD,GAPD;;AASAtB,EAAAA,SAAS,CAACS,SAAD,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAED,MAA7B;AAAqC,mBAAaF,KAAlD;AAAyD,IAAA,UAAU,EAAEG,SAArE;AAAA,cACG,CAAC,GAAGI,KAAK,CAAC,CAAD,CAAL,CAASkB,IAAT,EAAJ,EAAqBC,GAArB,CAAyBC,CAAC,iBACzB;AAAM,MAAA,KAAK,EAAE/B,SAAb;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAqD,oBAAY+B,CAAC,GAAG,CAArE;AAAwE,MAAA,OAAO,EAAEV,WAAjF;AAA8F,MAAA,WAAW,EAAEK,KAA3G;AAAA;AAAA,OAA8CK,CAAC,GAAG,CAAlD;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvCQ7B,U;;KAAAA,U;AAyCT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst starStyle = {\n  fontSize: '30px'\n};\n\nfunction StarRating(props) {\n  const [count, setCount] = useState(props.rating);\n\n  const rating = useRef('rating');\n\n  const setRating = () => {\n    const stars = rating.current.getElementsByClassName('star');\n    Array.from(stars).forEach(star => {\n      star.style.color = Math.ceil(count) >= star.dataset.value ? 'yellow' : 'gray'\n    });\n  }\n\n  const handleClick = event => {\n    let c = event.target.dataset.value;\n    setCount(c);\n    if(props.onClick)\n      props.onClick(c);\n  }\n\n  const hover = event => {\n    event.target.parentElement.style.cursor = 'pointer';\n    const stars = rating.current.getElementsByClassName('star');\n    let value = event.target.dataset.value;\n    Array.from(stars).forEach(star => {\n      star.style.color = value >= star.dataset.value ? 'yellow' : 'gray'\n    });\n  }\n\n  useEffect(setRating);\n\n  return (\n    <div className=\"rating\" ref={rating} data-rating={count} onMouseOut={setRating}>\n      {[...Array(5).keys()].map(n =>\n        <span style={starStyle} className=\"star\" key={n + 1} data-value={n + 1} onClick={handleClick} onMouseOver={hover}>\n          &#9733;\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default StarRating;"]},"metadata":{},"sourceType":"module"}